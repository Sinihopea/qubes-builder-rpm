#!/bin/sh

set -e
if [ "${VERBOSE:-0}" -ge 2 ] || [ "${DEBUG:-0}" -eq 1 ]; then
    set -x
fi

if [ $# -lt 2 ]; then
    echo "Usage: $0 input output" >&2
    exit 1
fi

if [ -z "${ORIG_SRC}" ]; then
    ORIG_SRC="."
fi

cp "$1" "$1.tmp"

# Handle sources with multiples package/version/release:
# 'version' must contains list of version number corresponding to @VERSION@ @VERSION1@ ...
# 'rel', must contains list of release number corresponding to @REL@ @REL1@ ...
while read -r ver
do
    if [ "x$vnum" = "x" ]; then
        sed -i "s|@VERSION@|$ver|g" "$1.tmp"
    else
        sed -i "s|@VERSION$vnum@|$ver|g" "$1.tmp"
    fi
    vnum=$(( vnum + 1 ))
done < "${ORIG_SRC}/version"

if [ -e "${ORIG_SRC}/rel" ]; then
    while read -r rel
    do
        if [ "x$rnum" = "x" ]; then
            sed -i "s|@REL@|$rel|g" "$1.tmp"
        else
            sed -i "s|@REL$rnum@|$rel|g" "$1.tmp"
        fi
        rnum=$(( rnum + 1 ))
    done < "${ORIG_SRC}/rel"
else
    if grep -q "@REL@" "$1.tmp"; then
        echo "@REL@ found in spec, but no $ORIG_SRC/rel file" >&2
        exit 1
    fi
fi

# Handle default rel and backend_vmm
sed -i \
    -e "s:@BACKEND_VMM@:${BACKEND_VMM}:g" "$1.tmp"

# Handle changelog
if grep -q "@CHANGELOG@" "$1.tmp"; then
    "$(dirname "$0")"/generate-changelog "${ORIG_SRC}" "$1.tmp"
fi

# Handle dist
sed -i \
    -e "s:@DIST@:${DIST}:g" "$1.tmp"

# Handle SUSE specific package names
if [ "$DISTRIBUTION" = "opensuse" ]; then
    # Handle simple different package names
    sed -i \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)pycairo$/\1Requires:\2python2-cairo/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)netpbm-progs$/\1Requires:\2netpbm/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)PyYAML$/\1Requires:\2python2-PyYAML/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)xorg-x11-drv-dummy$/\1Requires:\2xf86-video-dummy/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)dejavu-sans-fonts$/\1Requires:\2dejavu-fonts/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)libGL-devel$/\1Requires:\2Mesa-libGL-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)libGLU-devel$/\1Requires:\2glu-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)dbus-devel$/\1Requires:\2dbus-1-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)dbus-glib-devel$/\1Requires:\2dbus-1-glib-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)python\(3\|%{python3_pkgversion}\)-dbus$/\1Requires:\2python\3-dbus-python/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)pulseaudio-libs-devel$/\1Requires:\2libpulse-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)edk2-tools$/\1Requires:\2ovmf-tools/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)edk2-ovmf$/\1Requires:\2qemu-ovmf-x86_64/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]a-z0-9-]\+\)ipxe-roms-qemu\([[:space:]a-z0-9-]*\)/\1Requires:\2qemu-ipxe\3/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]a-z0-9-]\+\)seabios-bin\([[:space:]a-z0-9-]*\)/\1Requires:\2qemu-seabios\3/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)pixman-devel$/\1Requires:\2libpixman-1-0-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)yajl-devel$/\1Requires:\2libyajl-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)iscsi-initiator-utils$/\1Requires:\2open-iscsi/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)numactl-devel$/\1Requires:\2libnuma-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)python\(3\|%{python3_pkgversion}\)-sphinx$/\1Requires:\2python\3-Sphinx/g" \
        -e "s/^BuildRequires:\([[:space:]]\+\)python%{python3_pkgversion}-hidapi\(.*\)/BuildRequires:\1libhidapi-devel\2/g" \
        -e "s/^Requires:\([[:space:]]\+\)python%{python3_pkgversion}-hidapi\(.*\)/Requires:\1python%{python3_pkgversion}-hidraw0\2/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)elfutils-libelf-devel$/\1Requires:\2libelf-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)nettle-devel$/\1Requires:\2libnettle-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)audit-libs-devel$/\1Requires:\2audit-devel/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)bzip2-devel\(.*\)/\1Requires:\2libbz2-devel\3/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)acpica-tools\(.*\)/\1Requires:\2acpica\3/g" \
        "$1.tmp"
    # These are not a separate package but contained in the base package
    sed -i \
        -e "s/^\(Build\)\?Requires:\([[:space:]a-z0-9-]\+\)perl-interpreter\([[:space:]a-z0-9-]*\)/\1Requires:\2perl\3/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]a-z0-9-]\+\)perl-generators\([[:space:]a-z0-9-]*\)/\1Requires:\2perl\3/g" \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)systemd-units$/\1Requires:\2systemd/g" \
        -e "s/^\(Build\)\?Requires:[[:space:]]\+glusterfs-api-devel.*//g" \
        "$1.tmp"
    # Make sure python setuptools is also installed when python devel package is
    sed -i \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)python\(2\|3\|%{python3_pkgversion}\)-devel$/\1Requires:\2python\3-devel python\3-setuptools/g" \
        "$1.tmp"
    # Make sure graphviz is also installed when asciidoc package is
    sed -i \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)asciidoc\(.*\)/\1Requires:\2asciidoc\3 graphviz/g" \
        "$1.tmp"
    # Make sure parted is also installed when parted devel package is
    sed -i \
        -e "s/^BuildRequires:\([[:space:]]\+\)parted-devel$/BuildRequires:\1parted-devel parted/g" \
        "$1.tmp"
    # When GCC plugins are needed, require specially built GCC that has plugin support enabled
    sed -i \
        -e "s/^\(Build\)\?Requires:\([[:space:]]\+\)gcc-plugin-devel\(.*\)/\1Requires:\2gcc >= 7-${DIST}.6.3 gcc-c++ >= 7-${DIST}.6.3 gcc-devel >= 7-${DIST}.6.3\3/g" \
        "$1.tmp"
fi

cat "$1.tmp" > "$2"
rm -rf "$1.tmp"

# TODO: improve handlers
